generator photon {
  provider = "photonjs"
  binaryTargets = ["native", "debian-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://prisma:prisma@0.0.0.0:5432/prisma"
}

model User {
  id               String   @default(cuid()) @id
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  email            String   @unique
  role             Role     @default(USER)
  firstName        String?
  lastName         String?
  name             String
  name_lower       String
  username         String   @unique
  username_lower   String   @unique
  headline         String?
  avatar           String?
  auth0id          String   @unique
  identity         String?
  privateKey       String
  address          String
  submittedPosts   Post[]   @relation(name: "SubmittedPosts")
  createdPosts     Post[]   @relation(name: "CreatedPosts")
}

model Topic {
  id             String   @default(cuid()) @id
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  name           String
  slug           String   @unique
  description    String?
  image          String?
  followersCount Int?
  postsCount     Int?
  trending       Boolean?
  posts          Post[]
  followedBy     User[]
}

model Post {
  id            String   @default(cuid()) @id
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  type          PostType @default(PRODUCT)
  name          String?
  slug          String   @unique
  link          String?
  thumbnail     String?
  description   String?
  tagline       String?
  submitter     User     @relation(name: "SubmittedPosts")
  creators      User[]   @relation(name: "CreatedPosts")
  galleryThumbs String[]
  comments      Comment[]
  day           String
  featured      Boolean?
  topics        Topic[]
  votes         Vote[]
  sections      Section[]
}

model Comment {
  id            String         @default(cuid()) @id
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  text          String    
  post          Post?    
  parent        Comment?       @relation(name: "CommentParent")
  author        User    
  replies       Comment[]      @relation(name: "CommentReplies")
  votes         CommentVote[]
}

model CommentVote {
  id            String   @default(cuid()) @id
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User
  comment       Comment
}

model Vote {
  id            String   @default(cuid()) @id
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User
  post          Post
}

model Section {
  id            String   @default(cuid()) @id
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  date          String   @unique
  posts         Post[]
}

model SignedUpload {
  id            String   @default(cuid()) @id
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  signedRequest String
  url           String
}

enum Role {
  ADMIN
  USER
}

enum PostType {
  PRODUCT
  LINK
}