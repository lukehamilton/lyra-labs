version: "3.7"
services:
  # flow:
  #   container_name: flow
  #   ports:
  #     - "3570:3569"
  #     - "8080:8080"
  #   image: gcr.io/dl-flow/emulator
  #   environment:
  #     FLOW_VERBOSE: "true"
  #     FLOW_PORT: "3570"
  #     FLOW_HTTPPORT: "8080"
  #     FLOW_PERSIST: "true"
  #     FLOW_SERVICEPRIVATEKEY: "95a711a3dc58a6b60c87b7199a66ad691fff7d2c6722520fc83052fbb3e7348b"
  postgres:
    container_name: postgres
    ports:
      - "5432:5432"
    image: postgres:10.10
    restart: always
    environment:
      POSTGRES_DATABASE: prisma
      POSTGRES_USER: prisma
      POSTGRES_PASSWORD: prisma
    volumes:
      - postgres:/var/lib/postgress
  # prisma:
  #   links:
  #     - postgres
  #   depends_on:
  #     - postgres
  #   container_name: prisma
  #   ports:
  #     - "5555:5555"
  #   build:
  #     context: backend/prisma
  #     dockerfile: Dockerfile
  #   environment:
  #     POSTGRES_URL: ${POSTGRES_URL}
  #   volumes:
  #     - /app/prisma
  # backend:
  #   links:
  #     - postgres
  #   depends_on:
  #     - postgres
  #     - prisma
  #   container_name: backend
  #   ports:
  #     - "4000:4000"
  #   build:
  #     context: backend
  #     dockerfile: Dockerfile
  #     args:
  #       - POSTGRES_URL=${POSTGRES_URL}
  #   environment:
  #     POSTGRES_URL: ${POSTGRES_URL}
  #     FRONTEND_URL: ${FRONTEND_URL}
  #   volumes:
  #     - ./backend:/app
  #     - /app/node_modules
  #     - /app/prisma
  # frontend:
  #   container_name: frontend
  #   ports:
  #     - "3000:3000"
  #   build:
  #     context: frontend
  #     dockerfile: Dockerfile
  #   environment:
  #     BACKEND_URL: ${BACKEND_URL}
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #     - /app/.next

volumes: #define our mysql volume used above
  postgres:
